@page "/links"
@attribute [Authorize]

@inject ILinkHttpService LinkHttpService
@inject NavigationManager NavigationManager

<style>
    .th {
        max-height: 600px;
    }
</style>
<PageTitle>Likns</PageTitle>

<h1 class="mb-4">Likns</h1>


@if (links == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="overflow-scroll th">
        <table class="table table-hover table-bordered border-dark">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Url Addres</th>
                    <th>Short  Url</th>
                    <th>Date Create UTC</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var link in links)
                {
                    <tr>
                        <td>
                            <a href="/link/@link.Id">@link.Id</a>
                        </td>
                        <td>@link.UrlAddress</td>
                        <td>@link.UrlShort</td>
                        <td>@link.DateTimeCreated</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private IEnumerable<LinkDetailsViewModel>? links;

    protected override async Task OnInitializedAsync()
    {
        await GetLinks();
    }

    private async Task GetLinks()
    {

        HttpResponseResult<IEnumerable<LinkDetailsViewModel>> result = await LinkHttpService.GetLinksAsync();
        links = result.Value;
    }

}
