@page "/links"
@inject ILinkHttpClient LinkClient
@inject NavigationManager NavigationManager

<PageTitle>Likns</PageTitle>

<h1>Likns</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (links == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Url Addres</th>
                <th>Short  Url</th>
                <th>Date Create</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var link in links)
            {
                <tr>
                    <td>
                        <span @onclick="@(()=>OpenArticle(link.Id.ToString()))">
                            @link.Id
                        </span>
                    </td>
                    <td>@link.UrlAddress</td>
                    <td>@link.UrlShort</td>
                    <td>@link.DateTimeCreated</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<LinkDto>? links;

    protected override async Task OnInitializedAsync()
    {
        await GetLinks();
    }

    private async Task GetLinks()
    {

        HttpResponseResult<IEnumerable<LinkDto>> result = await LinkClient.GetAsync<IEnumerable<LinkDto>>("api/link");
        links = result.Value;
    }


    private void OpenArticle(string id)
    {
        NavigationManager.NavigateTo($"/link/{id}");
    }
}
